/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/availability": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.SetAvailabilityRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.SetAvailabilityRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.SetAvailabilityRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/availability/imports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "multipart/form-data": {
                        /** Format: binary */
                        File: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/contractor-profile/skills": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["CheckTrade.API.Modules.Identity.SetSkillsRequest"];
                    "text/json": components["schemas"]["CheckTrade.API.Modules.Identity.SetSkillsRequest"];
                    "application/*+json": components["schemas"]["CheckTrade.API.Modules.Identity.SetSkillsRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/contractor-profile/gallery": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add a new portfolio entry for the authenticated contractor. */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Application.Portfolio.Requests.AddPortfolioItemRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Application.Portfolio.Requests.AddPortfolioItemRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Application.Portfolio.Requests.AddPortfolioItemRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Debug/test-repo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ping": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.RegisterNewUserRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.RegisterNewUserRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.RegisterNewUserRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/verify-otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.VerifyOtpRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.VerifyOtpRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.VerifyOtpRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/resend-otp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.ResendOtpRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.ResendOtpRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.ResendOtpRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.LoginRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.LoginRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.LoginRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.MyProfileDto"];
                        "application/json": components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.MyProfileDto"];
                        "text/json": components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.MyProfileDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/onboarding-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.OnboardingStatusDto"];
                        "application/json": components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.OnboardingStatusDto"];
                        "text/json": components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.OnboardingStatusDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.EnrichedProfileDto"];
                        "application/json": components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.EnrichedProfileDto"];
                        "text/json": components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.EnrichedProfileDto"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/me/scopes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/check-user-exists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    Login?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lead-gen/job-drafts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create dreaft. */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lead-gen/job-drafts/{token}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    token: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": unknown;
                    "text/json": unknown;
                    "application/*+json": unknown;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/api/lead-gen/job-drafts/{token}/convert": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    token: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lead-gen/jobs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.CreateJobRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.CreateJobRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.CreateJobRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lead-gen/jobs/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lead-gen/jobs/{id}/resubmit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.ResubmitJobRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.ResubmitJobRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.ResubmitJobRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/api/lead-gen/jobs/{id}/match": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.MatchContractorsRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.MatchContractorsRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.MatchContractorsRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lead-gen/jobs/draft": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    "Auto-Save-Token"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": unknown;
                    "text/json": unknown;
                    "application/*+json": unknown;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/lead-gen/jobs/draft/convert": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    "Auto-Save-Token"?: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/job-subcategories/{id}/form": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/identity/licenses/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Application.Licenses.Dtos.VerifyLicenseDto"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Application.Licenses.Dtos.VerifyLicenseDto"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Application.Licenses.Dtos.VerifyLicenseDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/identity/licenses/revoke": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Application.Licenses.Dtos.RevokeLicenseDto"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Application.Licenses.Dtos.RevokeLicenseDto"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Application.Licenses.Dtos.RevokeLicenseDto"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/identity/licenses/{key}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    key: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/onboarding": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/onboarding/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    UserId?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/properties": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Application.Properties.Requests.CreatePropertyRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Application.Properties.Requests.CreatePropertyRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Application.Properties.Requests.CreatePropertyRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/identity/properties/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["Domusfix.Modules.Identity.Application.Properties.Requests.UpdatePropertyRequest"];
                    "text/json": components["schemas"]["Domusfix.Modules.Identity.Application.Properties.Requests.UpdatePropertyRequest"];
                    "application/*+json": components["schemas"]["Domusfix.Modules.Identity.Application.Properties.Requests.UpdatePropertyRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/public/contractors/{id}/portfolio": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve public portfolio items for a contractor. */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description Contractor profile identifier. */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        "CheckTrade.API.Modules.Identity.SetSkillsRequest": {
            skills?: string[] | null;
        };
        "Domusfix.Modules.Identity.Application.Dtos.AddressDto": {
            line1?: string | null;
            line2?: string | null;
            city?: string | null;
            province?: string | null;
            postalCode?: string | null;
            country?: string | null;
            geoLocation?: components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.GeoLocationDto"];
        };
        "Domusfix.Modules.Identity.Application.Dtos.GeoLocationDto": {
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
        };
        "Domusfix.Modules.Identity.Application.Dtos.MediaFileDto": {
            url?: string | null;
            type?: string | null;
            /** Format: int64 */
            size?: number;
        };
        "Domusfix.Modules.Identity.Application.Dtos.Response.EnrichedProfileDto": {
            /** Format: uuid */
            id?: string;
            username?: string | null;
            email?: string | null;
            name?: components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.NameDto"];
            roles?: string[] | null;
            permissions?: string[] | null;
            featureFlags?: {
                [key: string]: boolean;
            } | null;
            locale?: string | null;
            timezone?: string | null;
            externalIds?: {
                [key: string]: string;
            } | null;
            /** Format: date-time */
            lastUpdated?: string;
        };
        "Domusfix.Modules.Identity.Application.Dtos.Response.MyProfileDto": {
            /** Format: uuid */
            userId?: string;
            fullName?: string | null;
            email?: string | null;
            phone?: string | null;
            roles?: string[] | null;
            type?: string | null;
            isOnboarded?: boolean;
            onboardingStatus?: string | null;
            referralSource?: string | null;
            isActive?: boolean;
        };
        "Domusfix.Modules.Identity.Application.Dtos.Response.NameDto": {
            given?: string | null;
            family?: string | null;
        };
        "Domusfix.Modules.Identity.Application.Dtos.Response.OnboardingMilestoneDto": {
            key?: string | null;
            status?: string | null;
            /** Format: date-time */
            completedAt?: string | null;
            required?: boolean;
        };
        "Domusfix.Modules.Identity.Application.Dtos.Response.OnboardingStatusDto": {
            /** Format: uuid */
            userId?: string;
            /** Format: int32 */
            percentComplete?: number;
            milestones?: components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.Response.OnboardingMilestoneDto"][] | null;
            /** Format: date-time */
            lastUpdated?: string;
        };
        "Domusfix.Modules.Identity.Application.Licenses.Dtos.RevokeLicenseDto": {
            licenseKey?: string | null;
            providerId?: string | null;
            reason?: components["schemas"]["Domusfix.Modules.Identity.Domain.Licenses.RevocationReason"];
        };
        "Domusfix.Modules.Identity.Application.Licenses.Dtos.VerifyLicenseDto": {
            licenseKey?: string | null;
            /** Format: uuid */
            userId?: string;
            providerId?: string | null;
            licenseType?: string | null;
            /** Format: date-time */
            expiresAt?: string | null;
        };
        "Domusfix.Modules.Identity.Application.Portfolio.Requests.AddPortfolioItemRequest": {
            title?: string | null;
            description?: string | null;
            mediaFiles?: components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.MediaFileDto"][] | null;
        };
        "Domusfix.Modules.Identity.Application.Properties.Requests.CreatePropertyRequest": {
            nickname?: string | null;
            address?: components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.AddressDto"];
        };
        "Domusfix.Modules.Identity.Application.Properties.Requests.UpdatePropertyRequest": {
            nickname?: string | null;
            address?: components["schemas"]["Domusfix.Modules.Identity.Application.Dtos.AddressDto"];
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        "Domusfix.Modules.Identity.Domain.Licenses.RevocationReason": 0 | 1 | 2 | 3;
        "Domusfix.Modules.Identity.Domain.Users.Requests.LoginRequest": {
            method?: string | null;
            idToken?: string | null;
            login?: string | null;
            password?: string | null;
            otp?: string | null;
        };
        "Domusfix.Modules.Identity.Domain.Users.Requests.RegisterNewUserRequest": {
            login?: string | null;
            password?: string | null;
            email?: string | null;
            firstName?: string | null;
            lastName?: string | null;
            mobile?: string | null;
            /** Format: uuid */
            tenantId?: string;
            confirmLink?: string | null;
            userType?: string | null;
            userRoles?: string[] | null;
            preferredLanguage?: string | null;
            referralSource?: string | null;
            draftTokens?: string[] | null;
        };
        "Domusfix.Modules.Identity.Domain.Users.Requests.ResendOtpRequest": {
            /** Format: uuid */
            userId?: string;
        };
        "Domusfix.Modules.Identity.Domain.Users.Requests.SetAvailabilityRequest": {
            slots?: components["schemas"]["Domusfix.Modules.Identity.Domain.Users.Requests.SetAvailabilityRequestSlot"][] | null;
            mode?: string | null;
        };
        "Domusfix.Modules.Identity.Domain.Users.Requests.SetAvailabilityRequestSlot": {
            slotId?: string | null;
            /** Format: date-time */
            start?: string;
            /** Format: date-time */
            end?: string;
            timezone?: string | null;
            type?: string | null;
            reason?: string | null;
            recurrenceRule?: string | null;
        };
        "Domusfix.Modules.Identity.Domain.Users.Requests.VerifyOtpRequest": {
            /** Format: uuid */
            userId?: string;
            mobileOtp?: string | null;
            emailOtp?: string | null;
        };
        "Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest": {
            /** Format: uuid */
            userId?: string;
            userType?: string | null;
            isCompanyOwner?: boolean;
            contact?: components["schemas"]["Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest+ContactDto"];
            license?: components["schemas"]["Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest+LicenseDto"];
            insurance?: components["schemas"]["Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest+InsuranceDto"];
            preferences?: components["schemas"]["Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest+PreferencesDto"];
        };
        "Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest+ContactDto": {
            fullName?: string | null;
            email?: string | null;
            phone?: string | null;
        };
        "Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest+InsuranceDto": {
            provider?: string | null;
            policyNumber?: string | null;
            /** Format: date-time */
            effectiveDate?: string;
            /** Format: date-time */
            expiryDate?: string;
        };
        "Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest+LicenseDto": {
            number?: string | null;
            /** Format: date-time */
            issuedDate?: string;
            /** Format: date-time */
            expiryDate?: string | null;
            issuingAuthority?: string | null;
        };
        "Domusfix.Modules.Identity.Presentation.Contracts.Requests.CompleteUserOnboardingRequest+PreferencesDto": {
            /** Format: double */
            radiusMiles?: number;
            serviceAreas?: string[] | null;
            trades?: string[] | null;
        };
        "Domusfix.Modules.LeadGeneration.Application.Dtos.AddressDto": {
            line1?: string | null;
            line2?: string | null;
            city?: string | null;
            province?: string | null;
            postalCode?: string | null;
            country?: string | null;
            geoLocationDto?: components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Dtos.GeoLocationDto"];
        };
        "Domusfix.Modules.LeadGeneration.Application.Dtos.BudgetRangeDto": {
            /** Format: double */
            min?: number | null;
            /** Format: double */
            max?: number | null;
        };
        "Domusfix.Modules.LeadGeneration.Application.Dtos.GeoLocationDto": {
            /** Format: double */
            latitude?: number;
            /** Format: double */
            longitude?: number;
        };
        "Domusfix.Modules.LeadGeneration.Application.Dtos.JobAnswerDto": {
            /** Format: uuid */
            questionId?: string;
            answer?: string | null;
        };
        "Domusfix.Modules.LeadGeneration.Application.Dtos.JobAttachmentDto": {
            fileName?: string | null;
            url?: string | null;
            contentType?: string | null;
        };
        "Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.CreateJobRequest": {
            /** Format: uuid */
            customerProfileId?: string;
            /** Format: uuid */
            propertyId?: string;
            /** Format: uuid */
            categoryId?: string;
            /** Format: uuid */
            subcategoryId?: string;
            title?: string | null;
            description?: string | null;
            /** Format: date-time */
            preferredStartDate?: string | null;
            urgency?: string | null;
            budget?: components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Dtos.BudgetRangeDto"];
            alternateAddress?: components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Dtos.AddressDto"];
            answers?: components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Dtos.JobAnswerDto"][] | null;
            attachments?: components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Dtos.JobAttachmentDto"][] | null;
        };
        "Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.MatchContractorsRequest": {
            /** Format: double */
            overrideRadiusMiles?: number | null;
        };
        "Domusfix.Modules.LeadGeneration.Application.Jobs.Requests.ResubmitJobRequest": {
            title?: string | null;
            description?: string | null;
            /** Format: date-time */
            preferredStartDate?: string | null;
            removeAttachmentIds?: string[] | null;
            newAttachments?: components["schemas"]["Domusfix.Modules.LeadGeneration.Application.Dtos.JobAttachmentDto"][] | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
